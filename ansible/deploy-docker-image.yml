- name: Ansible Playbook to Install and Setup Apache on Ubuntu
  hosts: stagingsrvgrp
  become: yes
  become_method: sudo
  tasks:

    - name: Add host domain crelease.webapp.local  về IP server Nexus
      lineinfile:
        path: /etc/hosts   # Đường dẫn tới file host
        line: "192.168.225.102 crelease.webapp.local"

    - name: Log in to Nexus Docker registry
      docker_login:
        registry_url: "{{ NEXUS_URL }}"
        username: "{{ USER }}"
        password: "{{ PASS }}"

    # - name: Stop and remove existing backend container
    #   docker_container:
    #     name: "{{ NAME_BACKEND }}"
    #     state: absent
    #     force_kill: yes

    # - name: Stop and remove existing frontend container
    #   docker_container:
    #     name: "{{ NAME_FRONTEND }}"
    #     state: absent
    #     force_kill: yes

    # - name: Remove all Docker images
    #   shell: |
    #     docker rmi $(docker images -q) || true
    #   ignore_errors: yes

    - name: Stop and remove existing backend container
      docker_container:
        name: "{{ NAME_BACKEND }}"
        state: absent
        force_kill: yes

    - name: Get all images with repository registers-backend
      command: docker images --format "{{ '{{.Repository}}:{{.Tag}}' }}" "{{ NEXUS_URL }}/{{ NAME_BACKEND }}"
      register: rmi_images_backend

    - name: Remove images with repository registers-backend
      command: docker rmi "{{ item }}"
      loop: "{{ rmi_images_backend.stdout_lines }}"
      when: rmi_images_backend.stdout_lines is defined and rmi_images_backend.stdout_lines | length > 0

    - name: Stop and remove existing frontend container
      docker_container:
        name: "{{ NAME_FRONTEND }}"
        state: absent
        force_kill: yes

    - name: Get all images with repository registers-frontkend
      command: docker images --format "{{ '{{.Repository}}:{{.Tag}}' }}" "{{ NEXUS_URL }}/{{ NAME_FRONTEND }}"
      register: rmi_images_frontend

    - name: Remove images with repository registers-backend
      command: docker rmi "{{ item }}"
      loop: "{{ rmi_images_frontend.stdout_lines }}"
      when: rmi_images_frontend.stdout_lines is defined and rmi_images_frontend.stdout_lines | length > 0

    - name: Pull backend image from Nexus Repository
      docker_image:
        name: "{{ NEXUS_URL }}/{{ NAME_BACKEND }}"
        tag: "{{ IMAGE_TAG }}"
        source: pull

    - name: Pull frontend image from Nexus Repository
      docker_image:
        name: "{{ NEXUS_URL }}/{{ NAME_FRONTEND }}"
        tag: "{{ IMAGE_TAG }}"
        source: pull

    - name: Run new backend container
      docker_container:
        name: "{{ NAME_BACKEND }}"
        image: "{{ NEXUS_URL }}/{{ NAME_BACKEND }}:{{ IMAGE_TAG }}"
        state: started
        ports:
          - "8081:8081"

    - name: Run new frontend container
      docker_container:
        name: "{{ NAME_FRONTEND }}"
        image: "{{ NEXUS_URL }}/{{ NAME_FRONTEND }}:{{ IMAGE_TAG }}"
        state: started
        ports:
          - "80:80"

